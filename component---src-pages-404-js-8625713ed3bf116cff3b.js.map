{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/Header.js","webpack:///./src/components/Layout.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["NotFoundPage","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_Layout__WEBPACK_IMPORTED_MODULE_2__","title","description","StaticQueryContext","React","createContext","StaticQuery","props","Consumer","staticQueryData","data","query","render","children","graphql","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","Header","core_browser_esm","gatsby_browser_entry","to","css","_ref","width","height","xmlns","viewBox","focusable","tabIndex","aria-label","_ref2","fill","d","Header_ref3","Layout","_ref3","_ref4","pages","react_default","a","Fragment","styles","Layout_ref","Helmet","defaultTitle","titleTemplate","lang","name","content","Layout_ref2","components_Header","_1085522811","node","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","assign","json","shape"],"mappings":"4HAceA,UAVM,kBACnBC,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,CACEC,MAAM,kBACNC,YAAY,oCAEZJ,OAAAC,EAAA,EAAAD,CAAA,uBACAA,OAAAC,EAAA,EAAAD,CAAA,yrBCEJ,IAAMK,EAAqBC,IAAMC,cAAc,IAEzCC,EAAc,SAAAC,GAAK,OACvBT,OAAAC,EAAA,EAAAD,CAACK,EAAmBK,SAApB,KACG,SAAAC,GACC,OACEF,EAAMG,MACLD,EAAgBF,EAAMI,QAAUF,EAAgBF,EAAMI,OAAOD,MAEtDH,EAAMK,QAAUL,EAAMM,UAC5BN,EAAMG,KAAOH,EAAMG,KAAKA,KAAOD,EAAgBF,EAAMI,OAAOD,MAGvDZ,OAAAC,EAAA,EAAAD,CAAA,uCAaf,SAASgB,IACP,MAAM,IAAIC,MACR,gVATJT,EAAYU,UAAY,CACtBN,KAAMO,IAAUC,OAChBP,MAAOM,IAAUE,OAAOC,WACxBR,OAAQK,IAAUI,KAClBR,SAAUI,IAAUI,2BCnCtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,kYC8ChCK,EA1CA,kBACb7B,OAAA8B,EAAA,EAAA9B,CAAC+B,EAAA,KAAD,CACEC,GAAG,IACHC,IAAGC,GAOHlC,OAAA8B,EAAA,EAAA9B,CAAA,OACEmC,MAAM,KACNC,OAAO,KACPC,MAAM,6BACNC,QAAQ,YACRC,UAAU,QACVC,SAAS,KACTC,aAAW,OACXR,IAAGS,GAIH1C,OAAA8B,EAAA,EAAA9B,CAAA,QACE2C,KAAK,UACLC,EAAE,iGAGN5C,OAAA8B,EAAA,EAAA9B,CAAA,QACEiC,IAAGY,GADL,0pBCrBEC,EAAS,SAAAC,GAAA,IAAGhC,EAAHgC,EAAGhC,SAAUZ,EAAb4C,EAAa5C,MAAOC,EAApB2C,EAAoB3C,YAApB,OACbJ,OAAA8B,EAAA,EAAA9B,CAAC+B,EAAA,YAAD,CACElB,MAAK,aAmBLC,OAAQ,SAAAkC,KAAGC,MAAH,OACNjD,OAAA8B,EAAA,EAAA9B,CAAAkD,EAAAC,EAAAC,SAAA,KACEpD,OAAA8B,EAAA,EAAA9B,CAAC8B,EAAA,EAAD,CACEuB,OAAMC,IA2BRtD,OAAA8B,EAAA,EAAA9B,CAACuD,EAAA,OAAD,CAAQC,aAAa,OAAOC,cAAc,aACxCzD,OAAA8B,EAAA,EAAA9B,CAAA,QAAM0D,KAAK,UACVvD,GAASH,OAAA8B,EAAA,EAAA9B,CAAA,aAAQG,GACjBC,GAAeJ,OAAA8B,EAAA,EAAA9B,CAAA,QAAM2D,KAAK,cAAcC,QAASxD,KAEpDJ,OAAA8B,EAAA,EAAA9B,CAAA,OACEiC,IAAG4B,GAaH7D,OAAA8B,EAAA,EAAA9B,CAAC8D,EAAD,MACC/C,KAtETH,KAAAmD,KA6EFjB,EAAO5B,UAAY,CACjBH,SAAUI,IAAU6C,KAAK1C,YAGZwB,wGCtFTmB,EAAmB,SAAA/B,GAAkB,IAAfgC,EAAehC,EAAfgC,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAOhE,IAAMiE,cAAcC,IAApBxE,OAAAyE,OAAA,CACLP,WACAC,iBACGA,EAAcO,QAIrBT,EAAiB/C,UAAY,CAC3BgD,SAAU/C,IAAUwD,MAAM,CACxBL,SAAUnD,IAAUE,OAAOC,aAC1BA,YAGU2C","file":"component---src-pages-404-js-8625713ed3bf116cff3b.js","sourcesContent":["import React from 'react'\n\nimport Layout from '../components/Layout'\n\nconst NotFoundPage = () => (\n  <Layout\n    title=\"404 - Not found\"\n    description=\"Sorry this page cannot be found.\"\n  >\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { css } from '@emotion/core'\n\nconst Header = () => (\n  <Link\n    to=\"/\"\n    css={css`\n      align-items: center;\n      display: flex;\n      justify-content: center;\n      padding: 0.5em 0;\n    `}\n  >\n    <svg\n      width=\"32\"\n      height=\"32\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 31 32\"\n      focusable=\"false\"\n      tabIndex=\"-1\"\n      aria-label=\"Zone\"\n      css={css`\n        width: 20px;\n      `}\n    >\n      <path\n        fill=\"inherit\"\n        d=\"M6.83772.75172L2.0797 7.8679h14.00937L0 31.9072h25.16186l4.79772-7.18017H14.9798L31 .75172z\"\n      />\n    </svg>\n    <span\n      css={css`\n        color: var(--color-gunmetal);\n        flex: 1;\n        font-size: 0.9em;\n        font-weight: normal;\n        margin-left: 0.75em;\n        text-transform: uppercase;\n      `}\n    >\n      Tech\n    </span>\n  </Link>\n)\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport { Global, css } from '@emotion/core'\nimport { Helmet } from 'react-helmet'\n\nimport Header from './Header'\nimport 'normalize.css'\nimport '../fonts/index.css'\n\nconst Layout = ({ children, title, description }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        pages: allMarkdownRemark(\n          sort: { order: ASC, fields: [fields___slug] }\n        ) {\n          edges {\n            node {\n              id\n              frontmatter {\n                title\n              }\n              fields {\n                slug\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={({ pages }) => (\n      <>\n        <Global\n          styles={css`\n            :root {\n              --gap: 2rem;\n              --radius: 5px;\n              --color-mint: #86e8cc;\n              --color-alabaster: #f6f7f7;\n              --color-grey-light: #d8d8d8;\n              --color-gunmetal: #2c2b39;\n              --color-white: #fff;\n            }\n\n            body {\n              color: var(--color-gunmetal);\n              font-family: 'Euclid Flex', -apple-system, BlinkMacSystemFont,\n                'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans',\n                'Helvetica Neue', sans-serif;\n              font-size: 18px;\n              font-weight: 300;\n              line-height: 1.5;\n              letter-spacing: -0.5px;\n            }\n\n            a {\n              text-decoration: none;\n            }\n          `}\n        />\n        <Helmet defaultTitle=\"Zone\" titleTemplate=\"%s - Zone\">\n          <html lang=\"en-gb\" />\n          {title && <title>{title}</title>}\n          {description && <meta name=\"description\" content={description} />}\n        </Helmet>\n        <div\n          css={css`\n            display: grid;\n            grid-template-columns:\n              [full-start] minmax(var(--gap), 1fr)\n              [main-start] minmax(0, 40em)\n              [main-end] minmax(var(--gap), 1fr)\n              [full-end];\n\n            & > * {\n              grid-column: main;\n            }\n          `}\n        >\n          <Header />\n          {children}\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}