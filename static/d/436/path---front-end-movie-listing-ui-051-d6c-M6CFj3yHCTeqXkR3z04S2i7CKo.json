{"data":{"markdownRemark":{"html":"<blockquote>\n<p>This is not a test! Seriously, try and have fun with it, make it your own!</p>\n</blockquote>\n<h2>Introduction</h2>\n<ul>\n<li>😍 Be sure to write comments and a README. Provide instructions on how to run the project and any notes about your solution.</li>\n<li>🤩 Feel free to use a JavaScript framework. We use React, Vue and plain JavaScript here but use what you’re most comfortable with.</li>\n<li>🤨 You can also use a starter kit like <a href=\"https://github.com/facebook/create-react-app#readme\">Create React App</a> or <a href=\"https://vuejs.org/v2/guide/installation.html#CLI\">Vue CLI</a> to save time.</li>\n<li>🤗 We love clean, responsive interfaces. Pick your favourite <a href=\"https://fonts.google.com/\">Google font</a> and layout the movies in a grid, adjusting the number of columns as the device width allows.</li>\n<li>🧐 We’re most interested in how you return and layout the results. Also, please don't use a CSS framework.</li>\n<li>😇 Keep it simple, keep it DRY, but don’t over complicate or over engineer, comment and test as much as possible.</li>\n<li>🤓 Commit your code to a public Git repository and provide us with the URL.</li>\n</ul>\n<h2>Brief</h2>\n<p>Using the TMDb API display a list of now showing movies allowing the user to filter by genre and rating.</p>\n<blockquote>\n<p>Note: <a href=\"https://www.themoviedb.org/account/signup\">You’ll need an TMDb account</a> to request an API key. Once you are registered, go to account settings and click 'API' in sidebar.</p>\n</blockquote>\n<h2>Input</h2>\n<ul>\n<li><a href=\"https://developers.themoviedb.org/3/movies/get-now-playing\">TMDb Movies Now Playing API</a></li>\n<li><a href=\"https://developers.themoviedb.org/3/getting-started/images\">TMDb Image API</a></li>\n<li>Minimum rating input with a range between 0 and 10, increments of 0.5 and a default set to 3.</li>\n</ul>\n<h2>Output</h2>\n<ul>\n<li>Display a list of movies, each showing their title, genres and poster image.</li>\n<li>The movies should be ordered by popularity (most popular first - <code>popularity</code> property).</li>\n<li>Movies should also be filterable by their rating (<code>vote_average</code> property). i.e If rating was set to 5, you would expect to see all movies with a rating of 5 or higher.</li>\n<li>The input API's should only be called once.</li>\n</ul>","tableOfContents":"<ul>\n<li><a href=\"/front-end/movie-listing-ui/#introduction\">Introduction</a></li>\n<li><a href=\"/front-end/movie-listing-ui/#brief\">Brief</a></li>\n<li><a href=\"/front-end/movie-listing-ui/#input\">Input</a></li>\n<li><a href=\"/front-end/movie-listing-ui/#output\">Output</a></li>\n</ul>","frontmatter":{"group":"Front-end","title":"Movie listings UI challenge"}}},"pageContext":{"slug":"/front-end/movie-listing-ui"}}