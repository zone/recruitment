{"version":3,"sources":["webpack:///./src/templates/Listing.js"],"names":["Listing","_ref2","_ref2$data","data","page","subPages","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_Layout__WEBPACK_IMPORTED_MODULE_6__","frontmatter","_components_Hero__WEBPACK_IMPORTED_MODULE_5__","css","_ref","_components_Content__WEBPACK_IMPORTED_MODULE_4__","edges","map","_ref3","_ref3$node","node","id","path","title","context","key","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","dangerouslySetInnerHTML","__html","html","propTypes","PropTypes","shape","array","isRequired","query"],"mappings":"4TASe,SAASA,EAATC,GAA+C,IAAAC,EAAAD,EAA5BE,KAAQC,EAAoBF,EAApBE,KAAMC,EAAcH,EAAdG,SAC9C,OACEC,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAWJ,EAAKK,YACfH,OAAAC,EAAA,EAAAD,CAACI,EAAA,EAASN,EAAKK,aACfH,OAAAC,EAAA,EAAAD,CAAA,OACEK,IAAGC,GAQHN,OAAAC,EAAA,EAAAD,CAAA,mBACAA,OAAAC,EAAA,EAAAD,CAACO,EAAA,EAAD,KACGR,GACCC,OAAAC,EAAA,EAAAD,CAAA,UACGD,EAASS,MAAMC,IAAI,SAAAC,GAAA,IAAAC,EAAAD,EAAGE,KAAQC,EAAXF,EAAWE,GAAIC,EAAfH,EAAeG,KAAiBC,EAAhCJ,EAAqBK,QAAWD,MAAhC,OAClBf,OAAAC,EAAA,EAAAD,CAAA,MAAIiB,IAAKJ,GACPb,OAAAC,EAAA,EAAAD,CAACkB,EAAA,KAAD,CAAMC,GAAIL,GAAOC,SAMzBhB,GAAYC,OAAAC,EAAA,EAAAD,CAAA,4BACdA,OAAAC,EAAA,EAAAD,CAACO,EAAA,EAAD,CAASa,wBAAyB,CAAEC,OAAQvB,EAAKwB,UAMzD5B,EAAQ6B,UAAY,CAClB1B,KAAM2B,IAAUC,MAAM,CACpB3B,KAAM0B,IAAUE,MAAMC,WACtB5B,SAAUyB,IAAUE,MAAMC,aACzBA,YAGE,IAAMC,EAAK","file":"component---src-templates-listing-js-3b04590d3422eb235a93.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { graphql, Link } from 'gatsby'\r\nimport { css } from '@emotion/core'\r\n\r\nimport Content from '../components/Content'\r\nimport Hero from '../components/Hero'\r\nimport Layout from '../components/Layout'\r\n\r\nexport default function Listing({ data: { page, subPages } }) {\r\n  return (\r\n    <Layout {...page.frontmatter}>\r\n      <Hero {...page.frontmatter} />\r\n      <div\r\n        css={css`\r\n          margin: 2.5rem 0;\r\n\r\n          > :first-of-type {\r\n            margin-top: 0;\r\n          }\r\n        `}\r\n      >\r\n        <h2>Pages</h2>\r\n        <Content>\r\n          {subPages && (\r\n            <ul>\r\n              {subPages.edges.map(({ node: { id, path, context: { title } } }) => (\r\n                <li key={id}>\r\n                  <Link to={path}>{title}</Link>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </Content>\r\n        {!subPages && <p>No pages found.</p>}\r\n        <Content dangerouslySetInnerHTML={{ __html: page.html }} />\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nListing.propTypes = {\r\n  data: PropTypes.shape({\r\n    page: PropTypes.array.isRequired,\r\n    subPages: PropTypes.array.isRequired,\r\n  }).isRequired,\r\n}\r\n\r\nexport const query = graphql`\r\n  query($slug: String!, $subPageRegex: String!) {\r\n    page: markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      frontmatter {\r\n        description\r\n        subTitle\r\n        title\r\n      }\r\n    }\r\n    subPages: allSitePage(filter: { path: { regex: $subPageRegex } }) {\r\n      edges {\r\n        node {\r\n          id\r\n          path\r\n          context {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}