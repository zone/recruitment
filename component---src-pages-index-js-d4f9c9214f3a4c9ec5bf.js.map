{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["query","IndexPage","_ref","formattedPages","data","pages","edges","map","_ref2","_ref2$node","node","id","title","frontmatter","slug","fields","depth","split","length","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_components_Layout__WEBPACK_IMPORTED_MODULE_4__","_components_Hero__WEBPACK_IMPORTED_MODULE_5__","_components_Content__WEBPACK_IMPORTED_MODULE_6__","_ref3","children","key","style","paddingLeft","Array","join","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","PageGroup","items"],"mappings":"iMA6CaA,EAAK,aAkBHC,UAxDG,SAAAC,GAAyB,IACnCC,EADmCD,EAAtBE,KAAQC,MACEC,MAAMC,IACjC,SAAAC,GAMM,IAAAC,EAAAD,EALJE,KACEC,EAIEF,EAJFE,GACeC,EAGbH,EAHFI,YAAeD,MACLE,EAERL,EAFFM,OAAUD,KAGNE,EAAQF,EAAKG,MAAM,KAAKC,OAAS,EAEvC,MAAO,CACLP,KACAC,QACAE,OACAE,UAGJ,IAGF,OACEG,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,KACEF,OAAAC,EAAA,EAAAD,CAACG,EAAA,EAAD,CAAMV,MAAM,cACZO,OAAAC,EAAA,EAAAD,CAACI,EAAA,EAAD,KACEJ,OAAAC,EAAA,EAAAD,CAAA,UACGhB,EAAeI,IAAI,SAAAiB,GAAA,IAAGb,EAAHa,EAAGb,GAAIc,EAAPD,EAAOC,SAAUb,EAAjBY,EAAiBZ,MAAOE,EAAxBU,EAAwBV,KAAME,EAA9BQ,EAA8BR,MAA9B,OAClBG,OAAAC,EAAA,EAAAD,CAAA,MAAIO,IAAKf,EAAIgB,MAAO,CAAEC,YAAgB,EAAIZ,EAAT,OAC9B,IAAIa,MAAMb,EAAQ,GAAGc,KAAK,KAD7B,IACmCX,OAAAC,EAAA,EAAAD,CAACY,EAAA,KAAD,CAAMC,GAAIlB,GAAOF,GACjDa,GAAYN,OAAAC,EAAA,EAAAD,CAACc,UAAD,CAAWC,MAAOT","file":"component---src-pages-index-js-d4f9c9214f3a4c9ec5bf.js","sourcesContent":["import React from 'react'\nimport { graphql, Link } from 'gatsby'\n\nimport Layout from '../components/Layout'\nimport Hero from '../components/Hero'\nimport Content from '../components/Content'\n\nconst IndexPage = ({ data: { pages } }) => {\n  const formattedPages = pages.edges.map(\n    ({\n      node: {\n        id,\n        frontmatter: { title },\n        fields: { slug },\n      },\n    }) => {\n      const depth = slug.split('/').length - 2\n\n      return {\n        id,\n        title,\n        slug,\n        depth,\n      }\n    },\n    {}\n  )\n\n  return (\n    <Layout>\n      <Hero title=\"Zone Tech\" />\n      <Content>\n        <ul>\n          {formattedPages.map(({ id, children, title, slug, depth }) => (\n            <li key={id} style={{ paddingLeft: `${1 * depth}em` }}>\n              {new Array(depth + 1).join('-')} <Link to={slug}>{title}</Link>\n              {children && <PageGroup items={children} />}\n            </li>\n          ))}\n        </ul>\n      </Content>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  {\n    pages: allMarkdownRemark(sort: { order: ASC, fields: [fields___slug] }) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage\n"],"sourceRoot":""}