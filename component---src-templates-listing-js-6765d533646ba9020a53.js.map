{"version":3,"sources":["webpack:///./src/templates/Listing.js"],"names":["Listing","_ref2","_ref2$data","data","page","subPages","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_Layout__WEBPACK_IMPORTED_MODULE_3__","frontmatter","_components_Hero__WEBPACK_IMPORTED_MODULE_5__","css","_ref","_components_Content__WEBPACK_IMPORTED_MODULE_4__","edges","map","_ref3","_ref3$node","node","id","path","title","context","key","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","dangerouslySetInnerHTML","__html","html","query"],"mappings":"4SAOe,SAASA,EAATC,GAA+C,IAAAC,EAAAD,EAA5BE,KAAQC,EAAoBF,EAApBE,KAAMC,EAAcH,EAAdG,SAC9C,OACEC,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAWJ,EAAKK,YACfH,OAAAC,EAAA,EAAAD,CAACI,EAAA,EAASN,EAAKK,aACfH,OAAAC,EAAA,EAAAD,CAAA,OACEK,IAAGC,GAQHN,OAAAC,EAAA,EAAAD,CAAA,mBACAA,OAAAC,EAAA,EAAAD,CAACO,EAAA,EAAD,KACGR,GACCC,OAAAC,EAAA,EAAAD,CAAA,UACGD,EAASS,MAAMC,IACd,SAAAC,GAAA,IAAAC,EAAAD,EACEE,KACEC,EAFJF,EAEIE,GACAC,EAHJH,EAGIG,KACWC,EAJfJ,EAIIK,QAAWD,MAJf,OAOEf,OAAAC,EAAA,EAAAD,CAAA,MAAIiB,IAAKJ,GACPb,OAAAC,EAAA,EAAAD,CAACkB,EAAA,KAAD,CAAMC,GAAIL,GAAOC,SAO3BhB,GAAYC,OAAAC,EAAA,EAAAD,CAAA,4BACdA,OAAAC,EAAA,EAAAD,CAACO,EAAA,EAAD,CAASa,wBAAyB,CAAEC,OAAQvB,EAAKwB,UAMlD,IAAMC,EAAK","file":"component---src-templates-listing-js-6765d533646ba9020a53.js","sourcesContent":["import React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport { css } from '@emotion/core'\nimport Layout from '../components/Layout'\nimport Content from '../components/Content'\nimport Hero from '../components/Hero'\n\nexport default function Listing({ data: { page, subPages } }) {\n  return (\n    <Layout {...page.frontmatter}>\n      <Hero {...page.frontmatter} />\n      <div\n        css={css`\n          margin: 2.5rem 0;\n\n          > :first-of-type {\n            margin-top: 0;\n          }\n        `}\n      >\n        <h2>Pages</h2>\n        <Content>\n          {subPages && (\n            <ul>\n              {subPages.edges.map(\n                ({\n                  node: {\n                    id,\n                    path,\n                    context: { title },\n                  },\n                }) => (\n                  <li key={id}>\n                    <Link to={path}>{title}</Link>\n                  </li>\n                )\n              )}\n            </ul>\n          )}\n        </Content>\n        {!subPages && <p>No pages found.</p>}\n        <Content dangerouslySetInnerHTML={{ __html: page.html }} />\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!, $subPageRegex: String!) {\n    page: markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        description\n        subTitle\n        title\n      }\n    }\n    subPages: allSitePage(filter: { path: { regex: $subPageRegex } }) {\n      edges {\n        node {\n          id\n          path\n          context {\n            title\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}